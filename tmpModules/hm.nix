{ pkgs, inputs, config, ... }:
{
  nixpkgs.overlays = [ inputs.nur.overlay ];
  users.users.nixos = {
    isSystemUser = true;
    shell = pkgs.bash;
    group = "nixos";
  };
  users.users.mar = {
    isNormalUser = true;
    shell = pkgs.zsh;
    group = "mar";
  };

  config.programs.zsh.enabled = true;
  imports = [ inputs.home-manager.nixosModules.home-manager ];
  home-manager.useGlobalPkgs = true;
  home-manager.useUserPackages = true;
  #home-manager.sharedModules = my-homemanager-modules;
  home-manager.users =
    let
      createUserConf = user:
        {
          imports = (builtins.attrValues inputs.my-modules.hmModules.x86_64-linux) ++ [
            {
              modules.zsh.enable = true;
              modules.zellij.enable = true;
              modules.firefox.enable = true;
              modules.autorandr.enable = false;
              modules.bspwm.enable = false;
              modules.dunst.enable = true;
              modules.kitty.enable = true;
              modules.newsboat.enable = true;
              modules.polybar.enable = false;
              modules.xmonad.enable = false;
              modules.spotifyd.enable = false;
              modules.other.enable = true;
              modules.myPackages.enable = true;
              modules.cloneDefaultRepos.enable = true;

              programs.home-manager.enable = true;
              programs.bash.enable = true;

              home = {
                stateVersion = "22.11";
                username = user;
                #homeDirectory = "/home/${user}";

                packages = [ pkgs.vim ];

                sessionVariables = {
                  EDITOR = "vim";
                  TEST_VARIABLE = "THISISATESTSTRING";
                };

                #file.".config/nixpkgs/config.nix" = {
                #  text = ''
                #    { allowUnfree = true; }
                #  '';
                #};
                file."git/txt" = {
                  text = "generated by homemanager";
                };

                sessionPath = [
                  "$HOME/go/bin"
                  "$HOME/.local/bin"
                  "$HOME/bin"
                ];
              };

            }
          ];
        };
    in
    {
      mar = createUserConf "mar";
      nixos = createUserConf "nixos";
    };

}
