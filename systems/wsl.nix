{ pkgs, inputs, my-homemanager-modules, config, ... }:
{
  nixpkgs.overlays = [ inputs.nur.overlay ];
  nixpkgs.config.allowUnfree = true;

  wsl = {
    enable = true;
    wslConf.automount.root = "/mnt";
    defaultUser = "nixos";
    startMenuLaunchers = true;

    # Enable native Docker support
    # docker-native.enable = true;
    # Enable integration with Docker Desktop (needs to be installed)
    # docker-desktop.enable = true;
  };
  #users.users.nixos = { shell = pkgs.bash; };
  users.users.mar = {
    isNormalUser = true;
  #  shell = pkgs.zsh;
  };

  home-manager.useGlobalPkgs = true;
  home-manager.useUserPackages = true;
  home-manager.sharedModules = my-homemanager-modules;
  home-manager.users =
    let
      createUserConf = user:
        {
          imports = [
            {
              modules.zsh.enable = true;
              modules.zellij.enable = true;
              modules.firefox.enable = true;
              modules.autorandr.enable = false;
              modules.bspwm.enable = false;
              modules.dunst.enable = true;
              modules.kitty.enable = true;
              modules.newsboat.enable = true;
              modules.polybar.enable = false;
              modules.xmonad.enable = false;
              modules.spotifyd.enable = false;
              modules.other.enable = true;
              modules.myPackages.enable = true;
              modules.cloneDefaultRepos.enable = true;

              programs.home-manager.enable = true;
              home = {
                stateVersion = "22.05";
                username = "${user}";
                #homeDirectory = "/home/${user}";

                #file.".config/nixpkgs/config.nix" = {
                #  text = ''
                #    { allowUnfree = true; }
                #  '';
                #};
                file."git/txt" = {
                  text = "generated by homemanager";
                };

                sessionPath = [
                  "$HOME/go/bin"
                  "$HOME/.local/bin"
                  "$HOME/bin"
                ];
              };

            }
          ];
        };
    in
    {
      mar = createUserConf "mar";
      nixos = createUserConf "nixos";
    };
  #systemd.services.foo = {
  #  script = ''
  #    mkdir -p /home/nixos/git;
  #    ${pkgs.git}/bin/git clone https://github.com/marnyg/nixos-modules /home/nixos/git/nixos-modules;
  #    ${pkgs.git}/bin/git clone https://github.com/marnyg/nixos-wsl /home/nixos/git/nixos-wsl;
  #    ${pkgs.git}/bin/git clone https://github.com/marnyg/nixos /home/nixos/git/nixos;
  #    ${pkgs.git}/bin/git clone https://github.com/marnyg/nvim-conf /home/nixos/git/nvim;
  #  '';
  #  wantedBy = [ "multi-user.target" ];
  #  serviceConfig = {
  #    Type = "oneshot";
  #  };
  #};

  environment.systemPackages = with pkgs; [
    wget
    curl
    lf
    htop
    git
    zellij
  ];

  # Enable nix flakes
  nix = {
    settings.auto-optimise-store = true;
    package = pkgs.nixUnstable;
    settings.experimental-features = [ "nix-command" "flakes" ];
  };

  system.stateVersion = "22.11";
}
