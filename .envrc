#!/usr/bin/env bash
# shellcheck shell=bash

# Performance optimizations for macOS
export DIRENV_WARN_TIMEOUT=30s

# Cache the flake evaluation to speed up subsequent shell entries
# This is crucial for performance on macOS with APFS
if [ -z "${DIRENV_USE_PROFILE:-}" ]; then
  # Use a persistent profile to prevent garbage collection
  export DIRENV_USE_PROFILE="/tmp/direnv-profile-nixos-$$"
fi

# Source local overrides if they exist
source_env_if_exists .envrc.local

# Install devenv CLI to PATH if not already available
if ! command -v devenv &>/dev/null; then
  # shellcheck disable=SC2016
  DEVENV_PATH=$(nix-shell -p devenv --run 'echo $PATH' 2>/dev/null)
  export PATH="${DEVENV_PATH}:$PATH"
fi

# Use devenv if devenv.nix exists, otherwise fall back to flake
if [ -f "devenv.nix" ]; then
  # Use devenv shell
  eval "$(devenv print-dev-env)"
else
  # Fall back to flake with performance optimizations
  # --fallback: automatically build when binary not in cache
  # --no-pure-eval: allows access to NIX_PATH and other env vars
  use flake . --no-pure-eval --fallback
fi

# Optional: Watch for changes in nix files for automatic reload
# Uncomment if you want automatic reloading when nix files change
# watch_file nix/**/*.nix
# watch_file flake.lock
